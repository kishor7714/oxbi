name: GitHub Actions PR CHECKS - check SOURCE branch name

on:
  # To get Pull Request Comments, you need to be scanning on Pull Request
  pull_request:
    branches:
#For example, you can restrict actions on pull requests to only run when created against the test branch:
      - features/*
      - main

#Ref: https://github.com/orgs/community/discussions/27154      
jobs:
  Get_SRC_DEST_BRANCH_NAMES_VERIFY_BRANCH_RULES:
    name: check if the source and dest branch is correct and allowed branches 
    runs-on: ubuntu-latest
    env:
      PR_SOURCE_BRANCH: ${{ github.event.pull_request.head.ref }}
      PR_TARGET_BRANCH: ${{ github.event.pull_request.base.ref }}      
    steps:
        - name: get PR source Branch name FROM github.event.pull_request.base.ref
          run: echo "PR initiated FROM Branch name" $PR_SOURCE_BRANCH
        - name: get PR source Branch name TO github.event.pull_request.head.ref
          run: echo "PR initiated TO Branch name" $PR_TARGET_BRANCH
        - name: get PR source Branch name from github.event.pull_request.base.ref
          run: |
                if [[ $PR_TARGET_BRANCH == "main" ]]; then
                  if [[ ! $PR_SOURCE_BRANCH == feature/* ]]; then
                    echo "Error: If PR target branch is 'main', the PR source branch must start with 'feature/*'"
                    exit 1
                  fi                    
                fi
                echo "Branch validation successful."

  a:
    name: a
    runs-on: ubuntu-latest
    steps:
      - run: echo "A"
      - id: set
        run: |
          echo "::set-output name=run_job_b::yes"
    outputs:
      run_job_b: ${{ steps.set.outputs.run_job_b }}

  b:
    name: b
    runs-on: ubuntu-latest
    needs:
    - a
    # This will always run as long as job 'a' completes successfully.
    if: success() && needs.a.outputs.run_job_b == 'yes'
    steps:
    - run: echo "B"

  c:
    name: c
    runs-on: ubuntu-latest
    needs:
    - a
    - b
    # This will run if job 'b' was successful or skipped.
    if: success() || needs.b.result == 'skipped'
    steps:
    - run: |
        echo "C"
        # Access the output from job 'a'
        echo ${{ needs.a.outputs.run_job_b }}